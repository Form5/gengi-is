
// ==========================================================================
// Media Queries
// ==========================================================================

@mixin respond-to($media) {
  @if $media == small {
    @media #{$media-small-screen} { @content; }
  }
  @else if $media == middle {
    @media #{$media-middle-screen} { @content; }
  }
  @else if $media == medium {
    @media #{$media-medium-screen} { @content; }
  }

  @else if $media == middle-up {
    @media #{$media-middle-screen-up} { @content; }
  }
  @else if $media == medium-up {
    @media #{$media-medium-screen-up} { @content; }
  }
  @else if $media == large-up {
    @media #{$media-large-screen-up} { @content; }
  }

  @else if $media == middle-down {
    @media #{$media-middle-screen-down} { @content; }
  }
  @else if $media == medium-down {
    @media #{$media-medium-screen-down} { @content; }
  }
  @else if $media == large-down {
    @media #{$media-large-screen-down} { @content; }
  }

  @else if $media == landscape {
    @media #{$media-landscape} { @content; }
  }
  @else if $media == portrait {
    @media #{$media-portrait} { @content; }
  }
  @else if $media == retina {
    @media #{$media-retina} { @content; }
  }
}

// ==========================================================================
// Basic
// ==========================================================================

@mixin clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

@mixin box-sizing($boxmodel) {
	-webkit-box-sizing: $boxmodel;
	-moz-box-sizing: $boxmodel;
	box-sizing: $boxmodel;
}

@mixin user-select($select:none) {
	-webkit-user-select: $select;
	-khtml-user-select: $select;
	-moz-user-select: $select;
	-o-user-select: $select;
	user-select: $select;
}

@mixin background-clip($clip) {
	-webkit-background-clip: $clip;
	-moz-background-clip: $clip;
	background-clip: $clip;
}

@mixin background-origin($origin) {
	-webkit-background-origin: $origin;
	-moz-background-origin: $origin;
	background-origin: $origin;
}

@mixin background-size($size){
	-webkit-background-size: $size;
	-moz-background-size: $size;
	-o-background-size: $size;
	background-size: $size;
}

@mixin perspective($perspective) {
	-webkit-perspective: $perspective;
	-moz-perspective: $perspective;
	-ms-perspective: $perspective;
	-o-perspective: $perspective;
	perspective: $perspective;
}
@mixin perspective-origin($perspective-origin) {
	-webkit-perspective-origin: $perspective-origin;
	-moz-perspective-origin: $perspective-origin;
	-ms-perspective-origin: $perspective-origin;
	-o-perspective-origin: $perspective-origin;
	perspective-origin: $perspective-origin;
}

@mixin filter($filter-type,$filter-amount) {
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}

// ==========================================================================
// Text/content related
// ==========================================================================

@mixin font-face( $family-name, $font-path, $font-weight:normal, $font-style:normal) {
	@font-face {
	    font-family: $family-name;
	    src: url('#{$font-path}.eot');
	    src: url('#{$font-path}.eot?#iefix') format('embedded-opentype'),
			 		 url('#{$font-path}.svg##{$family-name}') format('svg'),
	         url('#{$font-path}.woff') format('woff'),
	         url('#{$font-path}.ttf') format('truetype');
	    font-weight: $font-weight;
	    font-style: $font-style;
	}
}

@mixin text-overflow() {
	// Requires inline-block or block for proper styling
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin reset-list() {
	list-style-type: none;
	list-style-image: none;
	list-style-position: outside;
}

@mixin columns($width: ($page-max-width/3 - ($spacing*2)), $count: 0, $gap: $spacing, $rule-color: $color-border, $rule-style: solid, $rule-width: 0px) {
	-moz-column-width: $width;
	-moz-column-count: $count;
	-moz-column-gap: $gap;
	-moz-column-rule-color: $rule-color;
	-moz-column-rule-style: $rule-style;
	-moz-column-rule-width: $rule-width;
	-webkit-column-width: $width;
	-webkit-column-count: $count;
	-webkit-column-gap: $gap;
	-webkit-column-rule-color: $rule-color;
	-webkit-column-rule-style: $rule-style;
	-webkit-column-rule-width: $rule-width;
	column-width: $width;
	column-count: $count;
	column-gap: $gap;
	column-rule-color: $rule-color;
	column-rule-style: $rule-style;
	column-rule-width: $rule-width;
}

// ==========================================================================
// Form element related
// ==========================================================================

@mixin resizable($direction: both) {
	// resize: horizontal | vertical | both
	resize: $direction;
	overflow: auto; // Safari fix
}

@mixin placeholder($color: $color-gray-light,$font-style:normal) {
	&:-ms-input-placeholder {
		color: $color;
		font-style: $font-style;
	}
	&:-moz-placeholder {
		color: $color;
		font-style: $font-style;
	}
	&::-moz-placeholder {
		color: $color;
		font-style: $font-style;
	}
	&::-webkit-input-placeholder {
		color: $color;
		font-style: $font-style;
	}
	&::input-placeholder {
		color: $color;
		font-style: $font-style;
	}
}


// ==========================================================================
// Animation
// ==========================================================================

@mixin animation($settings...) {
	-webkit-animation: $settings;
	-moz-animation: $settings;
	-ms-animation: $settings;
	-o-animation: $settings;
	animation: $settings;
}

// ==========================================================================
// Transitions
// ==========================================================================

@mixin transition($settings...){
	-webkit-transition: $settings;
	-khtml-transition: $settings;
	-moz-transition: $settings;
	-ms-transition: $settings;
	-o-transition: $settings;
	transition: $settings;
}

@mixin transition-delay($delay) {
	-webkit-transition-delay: $delay;
	-khtml-transition-delay: $delay;
	-moz-transition-delay: $delay;
	-ms-transition-delay: $delay;
	-o-transition-delay: $delay;
	transition-delay: $delay;
}

@mixin transition-property($property) {
	-webkit-transition-property: $property;
	-khtml-transition-property: $property;
	-moz-transition-property: $property;
	-ms-transition-property: $property;
	-o-transition-property: $property;
	transition-property: $property;
}

@mixin transition-duration($duration) {
	-webkit-transition-duration: $duration;
	-khtml-transition-duration: $duration;
	-moz-transition-duration: $duration;
	-ms-transition-duration: $duration;
	-o-transition-duration: $duration;
	transition-duration: $duration;
}

@mixin transition-timing-function($timing-function) {
	-webkit-transition-timing-function: $timing-function;
	-khtml-transition-timing-function: $timing-function;
	-moz-transition-timing-function: $timing-function;
	-ms-transition-timing-function: $timing-function;
	-o-transition-timing-function: $timing-function;
	transition-timing-function: $timing-function;
}

// ==========================================================================
// Transformations
// ==========================================================================

@mixin transform($str) {
	-webkit-transform: $str;
	-moz-transform: $str;
	-ms-transform: $str;
	-o-transform: $str;
	transform: $str;
}

@mixin transform-origin($x: left, $y: top) {
	-webkit-transform-origin: $x $y;
	-moz-transform-origin: $x $y;
	-ms-transform-origin: $x $y;
	-o-transform-origin: $x $y;
	transform-origin: $x $y;
}

@mixin transform-style($style) {
	-webkit-transform-style: $style;
	-moz-transform-style: $style;
	-ms-transform-style: $style;
	-o-transform-style: $style;
	transform-style: $style;
}

@mixin backface-visibility($string) {
	-webkit-backface-visibility: $string;
	-moz-backface-visibility: $string;
	-ms-backface-visibility: $string;
	-o-backface-visibility: $string;
	backface-visibility: $string;
}

// Shortcuts ============================================================

@mixin translate($x: 0, $y: 0) {
	@include transform (translate($x, $y));
}
@mixin translate3d($x: 0, $y: 0, $z: 0) {
	@include transform (translate3d($x, $y, $z));
}
@mixin translateX($x: 0) {
	@include transform (translateX($x));
}
@mixin translateY($y: 0) {
	@include transform (translateY($y));
}
@mixin translateZ($z: 0) {
	@include transform (translateZ($z));
}

@mixin scale($x:1) {
	@include transform (scale($x));
}
@mixin scale($x:1, $y:1) {
	@include transform (scale($x, $y));
}
@mixin scale3d($x:1, $y:1, $z:1) {
	@include transform (scale3d($x, $y, $z));
}
@mixin scaleX($x:1) {
	@include transform (scaleX($x));
}
@mixin scaleY($y:1) {
	@include transform (scaleY($y));
}
@mixin scaleZ($z:1) {
	@include transform (scaleZ($z));
}

@mixin rotate($angle:0) {
	@include transform (rotate($angle));
}
@mixin rotate3d($x:0, $y:0, $z:0, $angle:0) {
	@include transform (rotate3d($x, $y, $z, $angle));
}
@mixin rotateX($x:0) {
	@include transform (rotateX($x));
}
@mixin rotateY($y:0) {
	@include transform (rotateY($y));
}
@mixin rotateZ($z:0) {
	@include transform (rotateZ($z));
}

@mixin skew($angle:0) {
	@include transform (skew($angle));
}
@mixin skew($x: 0, $y: 0) {
	@include transform (skew($x, $y));
}
@mixin skewX($x:0) {
	@include transform (skewX($x));
}
@mixin skewY($y:0) {
	@include transform (skewY($y));
}

// ======================================================================